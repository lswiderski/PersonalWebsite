@using PersonalWebsite.Services.Models
@using PersonalWebsite.Common.Enums
@model AddPostViewModel
@{
    Layout = "_AdminLayout";
}
<script src="~/lib/ckeditor/ckeditor.js"></script>
<form asp-controller="Post" asp-action="Add" method="post" role="form" id="post-form">
    <div class="row">
        <div class="col-md-10">
            <div class="card card-block">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Title"></label>
                    <input  asp-for="Title" class="form-control"/>
                </div>
                <div class="form-group">
                    <label asp-for="Name"></label>
                    <input asp-for="Name" class="form-control"/>
                </div>
                <div class="form-group">
                    <label asp-for="Excerpt"></label>
                    <input asp-for="Excerpt" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="Content"></label>
                    <textarea asp-for="Content" class="ckeditor"></textarea>
                    
                </div>
            </div>
        </div>
        <div class="col-md-2 post-edit-sidebar">
            <div class="card card-block">
                <input type="button" value="Add post" class="btn btn-default" id="submit-button" />
                <input type="button" value="Cancel" class="btn btn-default" />

                <div class="form-group">
                    <label asp-for="Status"></label>
                    @Html.DropDownListFor(x => x.Status, Html.GetEnumSelectList(typeof(PostStatusType)), new { @class = "form-control" })
                </div>
            </div>
            <div class="card card-block">
                Category: <br />
                @Html.EditorFor(x => x.Categories)
            </div>
            <div class="card card-block">
                @Html.HiddenFor(x => x.Tags)
                Tags:
                <br/>
                <input type="text" id="tag-input" class="form-control"/>
                <br />
                <div id="tag-list">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="tag tag-primary" data-tagname="@tag"><a href="#" class="tag-remove-button" id="tag-@tag" onclick="PostTag.RemoveTag('tag-@tag')"><i class="fa fa-times" aria-hidden="true"></i></a> @tag</span>
                    }
                </div>
            </div>
        </div>
    </div>

    

    

    
</form>

<script>
    var PostTag;


    $(document).ready(function () {
        PostTag = new PostTagScope();
        PostTag.Init();
    });
    function PostTagScope()
    {
        var self = this;
        this.Init = function () {
            $('#submit-button').click(function () {
                self.PassTags();

                $('#post-form').submit();
            });
            $('#tag-input').on('keydown', function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                    self.TransformTags();
                }
            });
        };

        this.TransformTags = function () {
            var inputField = $('#tag-input');
            var listOfTags = $('#tag-list');

            //split new tags
            var tags = inputField.val().split(",")

            //create new tag items
            if (tags != [""]) {
                for (var i = 0; i < tags.length; i++) {
                    {
                        var newTag = tags[i].replace(/[^a-z]/gi, "").replace(/ /g, "").trim();

                        var newTagSpan = '<span class="tag tag-primary" data-tagname="' + newTag + '"><a href="#" class="tag-remove-button" id="tag-' + newTag + '" onclick="PostTag.RemoveTag(\'tag-'+ newTag +'\')"><i class="fa fa-times" aria-hidden="true"></i></a>' + newTag + '</span>';
                        listOfTags.append(newTagSpan);
                    }
                }

                //clear input
                $('#tag-input').val("");
            }
        }

        this.PassTags = function()
        {
            debugger;
            var modelTags = $('#Tags')

            var tagList = $('#tag-list').children();
            var tagStrings = [];
            for (var i = 0; i < tagList.length; i++) {
                tagStrings.push(tagList[i].dataset['tagname']);
            }

            debugger;
            modelTags.val(tagStrings);

        }
        this.RemoveTag = function(id)
        {
            $('#' + id).closest('.tag').remove();
        }
    }
</script>